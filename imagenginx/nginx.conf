user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
load_module /etc/nginx/modules/ngx_http_image_filter_module.so;
events {
    worker_connections 1024;
}

http {
    upstream redblue_servers {
	server apache-container:8084;
    server apache-container:8085;
}
   server {
	server_name task3host.ddns.net;

    listen 443 ssl; # managed by Certbot

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_dhparam  /etc/nginx/certs/ssl-dhparams.pem;

    location / {
        root /etc/nginx/moduls/;
            try_files /index.html $uri/ =404;
    }
     location /secondpage {
        root  /etc/nginx/moduls/;
        try_files /second.html $uri/ =404;
    }

    location /music {
        alias /etc/nginx/moduls/song.mp3;
        add_header Content-Disposition "attachment; filename=song.mp3";
    }

    location /info.php {
       proxy_pass http://apache-container:8081; 
    }

    location /secondserver {
        return 301 https://www.google.com/;
    }
     location /redblue {
        proxy_pass http://redblue_servers;
    }

    location  ~ ^/image1/(.*\.jpg)$ {
        expires -1; 
        add_header Pragma no-cache;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        set $file_name $1;
        alias  /etc/nginx/moduls/$file_name;
        add_header Content-Type image/jpeg;
        image_filter rotate 180;
     }

    location  ~ ^/image2/(.*\.png)$ {
        expires -1;
        add_header Pragma no-cache;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        set $file_name $1;
        alias /etc/nginx/moduls/$file_name;
        add_header Content-Type image/png;
     }
  }
server {
    
    if ($host = task3host.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
   
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
    return 404; # managed by Certbot
}

}